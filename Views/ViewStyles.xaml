<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vm="clr-namespace:ShopERP.ViewModels"
                    xmlns:vw="clr-namespace:ShopERP.Views"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <!-- Style for the expanders for adding content -->
    <Style TargetType="Expander" x:Key="AddingExpander">
        <Setter Property="Margin" Value="0,5,0,5"/>
        <Setter Property="Padding" Value="3"/>

        <!-- Default toggle button removal and border -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Border BorderBrush="Gray" BorderThickness="1" CornerRadius="5">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- Toggle button for expanding/folding -->
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=addButton, Path=IsChecked}" Value="True">
                <Setter Property="IsExpanded" Value="True"/>
                <Setter Property="Visibility" Value="Visible"/>
                <Setter Property="Height" Value="Auto"/>
                <Setter Property="Margin" Value="0,5,0,5"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=addButton, Path=IsChecked}" Value="False">
                <Setter Property="IsExpanded" Value="False"/>
                <Setter Property="Visibility" Value="Hidden"/>
                <Setter Property="Height" Value="0"/>
                <Setter Property="Margin" Value="0,5,0,0"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--Main DataGrid for Models-->
    <Style TargetType="DataGrid" x:Key="ModelDataGrid">
        <Setter Property="ColumnWidth" Value="100"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="MaxHeight" Value="600"/>
    </Style>
    
    <!-- Style for the icons -->
    <Style TargetType="Image" x:Key="AddingIcon">
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Margin" Value="0,0,0,3"/>
    </Style>

    <Style TargetType="TextBox" x:Key="AddingTextBox">
        <Setter Property="Width" Value="150"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,0,5"/>
    </Style>

    <Style TargetType="ComboBox" x:Key="AddingComboBox">
        <Setter Property="Width" Value="150"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,0,5"/>
    </Style>

    <!-- Style for the DatePicker with today's date as default -->
    <Style TargetType="DatePicker" x:Key="AddingDatePicker">
        <Setter Property="SelectedDate" Value="{x:Static sys:DateTime.Today}"/>
    </Style>
    
    <Style TargetType="GroupBox" x:Key="EditGroupBox">
        <Setter Property="Margin" Value="10,0,0,0"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="LightGray"/>
    </Style>

    <Style TargetType="CheckBox" x:Key="AddingCheckBox">
        <Setter Property="Margin" Value="0,6,0,0"/>
    </Style>

    <Style TargetType="Image" x:Key="EditIcon" BasedOn="{StaticResource AddingIcon}">
        <!--For editing-->
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=editCheckBox, Path=IsChecked}" Value="True">
                <Setter Property="Opacity" Value="1"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=editCheckBox, Path=IsChecked}" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBox" x:Key="EditTextBox" BasedOn="{StaticResource AddingTextBox}">
        <!--For editing-->
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=editCheckBox, Path=IsChecked}" Value="True">
                <Setter Property="IsEnabled" Value="True"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=editCheckBox, Path=IsChecked}" Value="False">
                <Setter Property="IsEnabled" Value="False"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ComboBox" x:Key="EditComboBox" BasedOn="{StaticResource AddingComboBox}">
        <!--For editing-->
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=editCheckBox, Path=IsChecked}" Value="True">
                <Setter Property="IsEnabled" Value="True"/>
                <Setter Property="Foreground" Value="Black"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=editCheckBox, Path=IsChecked}" Value="False">
                <Setter Property="IsEnabled" Value="False"/>
                <Setter Property="Foreground" Value="Gray"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Label" x:Key="EditLabel">
        <!--For editing-->
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=editCheckBox, Path=IsChecked}" Value="True">
                <Setter Property="IsEnabled" Value="True"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=editCheckBox, Path=IsChecked}" Value="False">
                <Setter Property="IsEnabled" Value="False"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="EditButton">
        <!--For editing-->
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=editCheckBox, Path=IsChecked}" Value="True">
                <Setter Property="IsEnabled" Value="True"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=editCheckBox, Path=IsChecked}" Value="False">
                <Setter Property="IsEnabled" Value="False"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="CheckBox" x:Key="EditCheckBox" BasedOn="{StaticResource AddingCheckBox}">
        <!--For editing-->
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=editCheckBox, Path=IsChecked}" Value="True">
                <Setter Property="IsEnabled" Value="True"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=editCheckBox, Path=IsChecked}" Value="False">
                <Setter Property="IsEnabled" Value="False"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="DatePicker" x:Key="EditDatePicker" BasedOn="{StaticResource AddingDatePicker}">
        <!--For editing-->
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=editCheckBox, Path=IsChecked}" Value="True">
                <Setter Property="IsEnabled" Value="True"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=editCheckBox, Path=IsChecked}" Value="False">
                <Setter Property="IsEnabled" Value="False"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
